name: Release

on:
  release:
    types: [published]

jobs:
  build-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: geometry-linux
          - os: windows-latest
            asset_name: geometry-windows
          - os: macos-latest
            asset_name: geometry-macos
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libeigen3-dev cmake build-essential
        
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install eigen cmake
        
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        vcpkg install eigen3:x64-windows
        
    - name: Configure CMake (Ubuntu/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DGEOM_USE_DOUBLE=ON \
          -DGEOM_BUILD_TESTS=OFF
          
    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cmake -B build `
          -DCMAKE_BUILD_TYPE=Release `
          -DGEOM_USE_DOUBLE=ON `
          -DGEOM_BUILD_TESTS=OFF `
          -DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake
          
    - name: Build
      run: cmake --build build --config Release
      
    - name: Package (Ubuntu/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cd build
        cpack -G TGZ
        
    - name: Package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        cpack -G ZIP
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./build/geometry-*.tar.gz
        asset_name: ${{ matrix.asset_name }}.tar.gz
        asset_content_type: application/gzip
